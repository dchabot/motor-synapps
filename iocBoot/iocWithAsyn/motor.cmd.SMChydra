### motor.cmd.SMChydra
#
# This file is designed to be sourced:
#   * after the communication port has been configured
#   * before iocInit
#

# Show serial communication
#asynSetTraceMask("serial5", 0, 3)
# Only show errors
asynSetTraceMask("serial5", 0, 1)
# Leave ascii selected so traces can be turned on with a single click
asynSetTraceIOMask("serial5", 0, 1)

# Set end-of-string terminators
asynOctetSetInputEos("serial5",0,"\r\n")
asynOctetSetOutputEos("serial5",0,"\r\n")

dbLoadTemplate("motor.substitutions.SMChydra")

# SMChydraCreateController(
#  port name,
#  asyn port name,
#  num axes,
#  moving poll period (ms),
#  idle poll period (ms) )
SMChydraCreateController("Hydra1", "serial5", 2, 100, 500)
# Use the following line to disable idle polling
#!SMChydraCreateController("Hydra1", "serial5", 2, 100, 0)

# This sleep is useful when asyn traces are enabled
#!epicsThreadSleep(3.0)

# Include an asyn record for each motor to make it easy to enable diagnostic messages
dbLoadRecords("$(ASYN)/db/asynRecord.db","P=IOC:,R=hydraAsyn1,PORT=Hydra1,ADDR=0,OMAX=256,IMAX=256")
dbLoadRecords("$(ASYN)/db/asynRecord.db","P=IOC:,R=hydraAsyn2,PORT=Hydra1,ADDR=1,OMAX=256,IMAX=256")
